name: EC2 Deploy (short)

on:
  repository_dispatch:
    types: [deploy-ec2]  # ECR에서 보낸 이벤트만 받음
  workflow_dispatch: {}   # 수동 실행은 유지

env:
  AWS_REGION: ap-northeast-2
  # ECR에서 전달받은 이미지 URI 사용, 없으면 latest
  IMAGE: ${{ github.event.client_payload.image_uri || '077672914621.dkr.ecr.ap-northeast-2.amazonaws.com/kickytime-repo:latest' }}
  TARGET_TAG_KEY: Role
  TARGET_TAG_VALUE: app
  PORT: "8080"
  HEALTH: "/actuator/health"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Run on all tagged instances via SSM
        run: |
          echo "Deploying image: $IMAGE"
          
          aws ssm send-command \
            --region $AWS_REGION \
            --document-name "AWS-RunShellScript" \
            --targets "Key=tag:${TARGET_TAG_KEY},Values=${TARGET_TAG_VALUE}" \
            --cloud-watch-output-config CloudWatchOutputEnabled=true,CloudWatchLogGroupName=/aws/ssm/kickytime \
            --parameters '{
              "commands": [
                "set -e",
                "command -v docker >/dev/null 2>&1 || (dnf -y install docker && systemctl enable --now docker)",
                "REG=$(echo \"'$IMAGE'\" | cut -d/ -f1)",
                "aws ecr get-login-password --region '$AWS_REGION' | docker login --username AWS --password-stdin $REG",
                "docker rm -f kickytime || true",
                "docker pull \"'$IMAGE'\"",
                "docker run -d --name kickytime -p '$PORT':'$PORT' \"'$IMAGE'\"",
                "for i in $(seq 1 60); do curl -fsS http://127.0.0.1:'$PORT$HEALTH' && break || sleep 2; done"
              ],
              "executionTimeout": ["1800"]
            }' \
            --comment "Deploy $IMAGE"